{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ALT-ADF"
		},
		"BusinessDATAUAT_UATPRODSQL_Server_Connection_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'BusinessDATAUAT_UATPRODSQL_Server_Connection'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=altrasqlmifailovergroup.fbfb1f231f1d.database.windows.net;Initial Catalog=BusinessData.UAT;User ID=altrasqlappformsadm"
		},
		"Transaction_UAT_UATSQL_Server_Connection_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Transaction_UAT_UATSQL_Server_Connection'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=altrasqlmifailovergroup.fbfb1f231f1d.database.windows.net;Initial Catalog=Transactions.UAT;User ID=altrasqlappformsadm"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/BusinessDATAUAT_UATPRODSQL_Server_Connection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlMI",
				"typeProperties": {
					"connectionString": "[parameters('BusinessDATAUAT_UATPRODSQL_Server_Connection_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ALTADFKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "altrasqlappformsadm"
					}
				},
				"connectVia": {
					"referenceName": "AzureSqlPrivateEndPointConnection",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Transaction_UAT_UATSQL_Server_Connection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlMI",
				"typeProperties": {
					"connectionString": "[parameters('Transaction_UAT_UATSQL_Server_Connection_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ALTADFKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "altrasqlappformsadm"
					}
				},
				"connectVia": {
					"referenceName": "AzureSqlPrivateEndPointConnection",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DeleteRecordsBefore18Months_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteRecordsBefore18Months",
						"description": "DeleteRecordsBefore18Months ",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_DeleteRecordsBefore18Months]"
						},
						"linkedServiceName": {
							"referenceName": "Transaction_UAT_UATSQL_Server_Connection",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-31T06:37:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Transaction_UAT_UATSQL_Server_Connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DynamicCampaigns')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyCampaignMembers",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TruncateCampaignMemberStaging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PartyCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PartyCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AsOfDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "AsOfDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "MemberStatusGroup",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MemberStatusGroup",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MembershipOpenDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "MembershipOpenDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "MembershipType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MembershipType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ZIPCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ZIPCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "City",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "City",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BirthDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "BirthDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "MarketingOptOut",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "MarketingOptOut",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "NewMemberFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "NewMemberFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "OnlineBankingUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "OnlineBankingUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "MobileAppUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "MobileAppUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "QuickAccessUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "QuickAccessUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "EStatementsUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "EStatementsUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "BillPayUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "BillPayUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ScheduledTransferUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "ScheduledTransferUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "RemoteDepositUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "RemoteDepositUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SendMoneyUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "SendMoneyUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "MobileWalletUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "MobileWalletUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Region",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Region",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BranchNumber",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BranchNumber",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BranchName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BranchName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CountryCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CountryCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AFAMemberFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "AFAMemberFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SS_DynamicCampaignMembers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_S_StagingCampignMembers",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyCampaignLoan",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TruncateCampaignLoanStaging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "LoanID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LoanID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AsOfDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "AsOfDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "PartyCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PartyCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LoanStatusGroup",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LoanStatusGroup",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LoanFamilyCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LoanFamilyCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LoanTypeCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LoanTypeCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LoanOpenDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "LoanOpenDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "LoanCloseDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "LoanCloseDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "CurrentBalance",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "CurrentBalance",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "CreditLimit",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "CreditLimit",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "LoanMaturityDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "LoanMaturityDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SS_DynamicCampaignLoan",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_S_StagingCampaignLoan",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyCampaignLoanServices",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TruncateCampaignLoanServicesStaging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AsOfDate"
										},
										"sink": {
											"name": "AsOfDate"
										}
									},
									{
										"source": {
											"name": "LoanFamilyCode"
										},
										"sink": {
											"name": "LoanFamilyCode"
										}
									},
									{
										"source": {
											"name": "LoanTypeCode"
										},
										"sink": {
											"name": "LoanTypeCode"
										}
									},
									{
										"source": {
											"name": "LoanTypeDescription"
										},
										"sink": {
											"name": "LoanTypeDescription"
										}
									},
									{
										"source": {
											"name": "BusinessLoanFlag"
										},
										"sink": {
											"name": "BusinessLoanFlag"
										}
									},
									{
										"source": {
											"name": "LoanGroup1"
										},
										"sink": {
											"name": "LoanGroup1"
										}
									},
									{
										"source": {
											"name": "LoanGroup2"
										},
										"sink": {
											"name": "LoanGroup2"
										}
									},
									{
										"source": {
											"name": "LoanGroup3"
										},
										"sink": {
											"name": "LoanGroup3"
										}
									},
									{
										"source": {
											"name": "LoanGroup4"
										},
										"sink": {
											"name": "LoanGroup4"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SS_DynamicCampaignLoanServices",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_S_StagingCampaignLoanServices",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyCampaignshare",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TruncateCampaignShareStaging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ShareID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShareID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AsOfDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "AsOfDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "PartyCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PartyCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ShareStatusGroup",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShareStatusGroup",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ShareTypeGroupCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShareTypeGroupCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ShareTypeCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShareTypeCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ShareOpenDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "ShareOpenDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "ShareCloseDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "ShareCloseDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "CurrentBalance",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "CurrentBalance",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "ShareMaturityDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "ShareMaturityDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SS_DynamicCampaignShare",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_S_StagingCampaignShare",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyCampaignShareServices",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TruncateCampaignShareServicesStaging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AsOfDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "AsOfDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "ShareTypeGroupCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShareTypeGroupCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ShareTypeCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShareTypeCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ShareTypeDescription",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShareTypeDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BusinessShareFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "BusinessShareFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ShareGroup1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShareGroup1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ShareGroup2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShareGroup2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ShareGroup3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShareGroup3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ShareGroup4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShareGroup4",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SS_DynamicCampaignShareServices",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_S_StagingCampaignShareServices",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TruncateCampaignMemberStaging",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE CampaignMemberStaging;\nselect count(*) from CampaignMemberStaging\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_StagingCampignMembers",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "TruncateCampaignLoanStaging",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE CampaignLoanStaging;\nselect count(*) from CampaignLoanStaging\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_StagingCampaignLoan",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "TruncateCampaignLoanServicesStaging",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE CampaignLoanServicesStaging;\nselect count(*) from CampaignLoanServicesStaging\n\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_StagingCampaignLoanServices",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "TruncateCampaignShareStaging",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE CampaignShareStaging;\nselect count(*) from CampaignShareStaging\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_StagingCampaignShare",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "TruncateCampaignShareServicesStaging",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE CampaignShareServicesStaging;\nselect count(*) from CampaignShareServicesStaging\n\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_StagingCampaignShareServices",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "TruncateCampaignMember",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CopyCampaignMembers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE CampaignMember;\nselect count(*) from CampaignMember",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_DynamicCampaignMember",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "TruncateCampaignLoan",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CopyCampaignLoan",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE CampaignLoan;\nselect count(*) from CampaignLoan",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_DynamicCampaignLoan",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "TruncateCampaignLoanServices",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CopyCampaignLoanServices",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE CampaignLoanServices;\nselect count(*) from CampaignLoanServices",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_DynamicCampaignLoanServices",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "TruncateCampaignShare",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CopyCampaignshare",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE CampaignShare;\nselect count(*) from CampaignShare",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_DynamicCampaignShare",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "TruncateCampaignShareServices",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CopyCampaignShareServices",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE CampaignShareServices;\nselect count(*) from CampaignShareServices",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_DynamicCampaignShareServices",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Sp_InsertMemberStagingToMember",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "TruncateCampaignMember",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertFromCampaignMemberStagingToCampaignMember]"
						},
						"linkedServiceName": {
							"referenceName": "BusinessData",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_InsertLoanStagingToLoan",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "TruncateCampaignLoan",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertFromCampaignLoanStagingToCampaignLoan]"
						},
						"linkedServiceName": {
							"referenceName": "BusinessData",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_InsertLoanServicesStagingToLoanServices",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "TruncateCampaignLoanServices",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertFromCampaignLoanServicesStagingToCampaignLoanServices]"
						},
						"linkedServiceName": {
							"referenceName": "BusinessData",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_InsertShareStagingToShare",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "TruncateCampaignShare",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertFromCampaignShareStagingToCampaignShare]"
						},
						"linkedServiceName": {
							"referenceName": "BusinessData",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_InsertShareServicesStagingToShareServices",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "TruncateCampaignShareServices",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertFromcampaignShareServicesStagingToCampaignShareServices]"
						},
						"linkedServiceName": {
							"referenceName": "BusinessData",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-21T14:43:06Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DynamicCampaignsDev')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyCampaignMembers",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TruncateCampaignMemberStaging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PartyCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PartyCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AsOfDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "AsOfDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "MemberStatusGroup",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MemberStatusGroup",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MembershipOpenDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "MembershipOpenDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "MembershipType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MembershipType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ZIPCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ZIPCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "City",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "City",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BirthDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "BirthDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "MarketingOptOut",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "MarketingOptOut",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "NewMemberFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "NewMemberFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "OnlineBankingUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "OnlineBankingUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "MobileAppUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "MobileAppUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "QuickAccessUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "QuickAccessUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "EStatementsUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "EStatementsUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "BillPayUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "BillPayUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ScheduledTransferUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "ScheduledTransferUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "RemoteDepositUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "RemoteDepositUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SendMoneyUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "SendMoneyUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "MobileWalletUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "MobileWalletUserFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Region",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Region",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BranchNumber",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BranchNumber",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BranchName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BranchName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CountryCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CountryCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AFAMemberFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "AFAMemberFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SS_DynamicCampaignMembers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_S_StagingCampignMembers_DEV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyCampaignLoan",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TruncateCampaignLoanStaging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "LoanID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LoanID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AsOfDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "AsOfDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "PartyCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PartyCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LoanStatusGroup",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LoanStatusGroup",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LoanFamilyCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LoanFamilyCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LoanTypeCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LoanTypeCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LoanOpenDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "LoanOpenDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "LoanCloseDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "LoanCloseDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "CurrentBalance",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "CurrentBalance",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "CreditLimit",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "CreditLimit",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "LoanMaturityDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "LoanMaturityDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SS_DynamicCampaignLoan",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_S_StagingCampaignLoan_DEV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyCampaignLoanServices",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TruncateCampaignLoanServicesStaging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AsOfDate"
										},
										"sink": {
											"name": "AsOfDate"
										}
									},
									{
										"source": {
											"name": "LoanFamilyCode"
										},
										"sink": {
											"name": "LoanFamilyCode"
										}
									},
									{
										"source": {
											"name": "LoanTypeCode"
										},
										"sink": {
											"name": "LoanTypeCode"
										}
									},
									{
										"source": {
											"name": "LoanTypeDescription"
										},
										"sink": {
											"name": "LoanTypeDescription"
										}
									},
									{
										"source": {
											"name": "BusinessLoanFlag"
										},
										"sink": {
											"name": "BusinessLoanFlag"
										}
									},
									{
										"source": {
											"name": "LoanGroup1"
										},
										"sink": {
											"name": "LoanGroup1"
										}
									},
									{
										"source": {
											"name": "LoanGroup2"
										},
										"sink": {
											"name": "LoanGroup2"
										}
									},
									{
										"source": {
											"name": "LoanGroup3"
										},
										"sink": {
											"name": "LoanGroup3"
										}
									},
									{
										"source": {
											"name": "LoanGroup4"
										},
										"sink": {
											"name": "LoanGroup4"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SS_DynamicCampaignLoanServices",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_S_StagingCampaignLoanServices_DEV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyCampaignshare",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TruncateCampaignShareStaging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ShareID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShareID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AsOfDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "AsOfDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "PartyCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PartyCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ShareStatusGroup",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShareStatusGroup",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ShareTypeGroupCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShareTypeGroupCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ShareTypeCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShareTypeCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ShareOpenDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "ShareOpenDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "ShareCloseDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "ShareCloseDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "CurrentBalance",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "CurrentBalance",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "ShareMaturityDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "ShareMaturityDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SS_DynamicCampaignShare",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_S_StagingCampaignShare_DEV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyCampaignShareServices",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TruncateCampaignShareServicesStaging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AsOfDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "AsOfDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "ShareTypeGroupCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShareTypeGroupCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ShareTypeCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShareTypeCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ShareTypeDescription",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShareTypeDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BusinessShareFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "BusinessShareFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ShareGroup1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShareGroup1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ShareGroup2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShareGroup2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ShareGroup3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShareGroup3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ShareGroup4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShareGroup4",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SS_DynamicCampaignShareServices",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_S_StagingCampaignShareServices_DEV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TruncateCampaignMemberStaging",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE CampaignMemberStaging;\nselect count(*) from CampaignMemberStaging\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_StagingCampignMembers_DEV",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "TruncateCampaignLoanStaging",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE CampaignLoanStaging;\nselect count(*) from CampaignLoanStaging\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_StagingCampaignLoan_DEV",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "TruncateCampaignLoanServicesStaging",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE CampaignLoanServicesStaging;\nselect count(*) from CampaignLoanServicesStaging\n\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_StagingCampaignLoanServices_DEV",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "TruncateCampaignShareStaging",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE CampaignShareStaging;\nselect count(*) from CampaignShareStaging\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_StagingCampaignShare_DEV",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "TruncateCampaignShareServicesStaging",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE CampaignShareServicesStaging;\nselect count(*) from CampaignShareServicesStaging\n\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_StagingCampaignShareServices_DEV",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "TruncateCampaignMember",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CopyCampaignMembers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE CampaignMember;\nselect count(*) from CampaignMember",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_DynamicCampaignMember_DEV",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "TruncateCampaignLoan",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CopyCampaignLoan",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE CampaignLoan;\nselect count(*) from CampaignLoan",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_DynamicCampaignLoan_DEV",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "TruncateCampaignLoanServices",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CopyCampaignLoanServices",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE CampaignLoanServices;\nselect count(*) from CampaignLoanServices",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_DynamicCampaignLoanServices_DEV",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "TruncateCampaignShare",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CopyCampaignshare",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE CampaignShare;\nselect count(*) from CampaignShare",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_DynamicCampaignShare_DEV",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "TruncateCampaignShareServices",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CopyCampaignShareServices",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE CampaignShareServices;\nselect count(*) from CampaignShareServices",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_DynamicCampaignShareServices_DEV",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Sp_InsertMemberStagingToMember",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "TruncateCampaignMember",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertFromCampaignMemberStagingToCampaignMember]"
						},
						"linkedServiceName": {
							"referenceName": "BusinessDataDev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_InsertLoanStagingToLoan",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "TruncateCampaignLoan",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertFromCampaignLoanStagingToCampaignLoan]"
						},
						"linkedServiceName": {
							"referenceName": "BusinessDataDev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_InsertLoanServicesStagingToLoanServices",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "TruncateCampaignLoanServices",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertFromCampaignLoanServicesStagingToCampaignLoanServices]"
						},
						"linkedServiceName": {
							"referenceName": "BusinessDataDev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_InsertShareStagingToShare",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "TruncateCampaignShare",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertFromCampaignShareStagingToCampaignShare]"
						},
						"linkedServiceName": {
							"referenceName": "BusinessDataDev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_InsertShareServicesStagingToShareServices",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "TruncateCampaignShareServices",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertFromcampaignShareServicesStagingToCampaignShareServices]"
						},
						"linkedServiceName": {
							"referenceName": "BusinessDataDev",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-21T14:43:07Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_InactiveEAgreementNumberDataTransfer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DNA Active Agreement Data Transfor",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate the DNAActiveAgrmntData table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AGREENBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "AGREENBR",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PERSNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "PERSNBR",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BYORGNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "BYORGNBR",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DATELASTMAINT",
											"type": "DateTime"
										},
										"sink": {
											"name": "DATELASTMAINT",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_O_Connectivity_InactiveEagreement",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_S_InsertDataToActiveAgrmnt",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate the DNAActiveAgrmntData table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE dbo.DNAActiveAgrmntData;\nSELECT COUNT(*) FROM dbo.DNAActiveAgrmntData",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_InsertDataToActiveAgrmnt",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-06-27T16:27:58Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_InactiveEAgreementNumberDataTransferDev')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DNA Active Agreement Data Transfor",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate the DNAActiveAgrmntData table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AGREENBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "AGREENBR",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PERSNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "PERSNBR",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BYORGNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "BYORGNBR",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DATELASTMAINT",
											"type": "DateTime"
										},
										"sink": {
											"name": "DATELASTMAINT",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_O_Connectivity_InactiveEagreement",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_S_InsertDataToActiveAgrmnt_DEV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate the DNAActiveAgrmntData table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE dbo.DNAActiveAgrmntData;\nSELECT COUNT(*) FROM dbo.DNAActiveAgrmntData",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_InsertDataToActiveAgrmnt_DEV",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-21T14:43:06Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_OfflineServices_30mins')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DIGITALBANKING_ACCTBAL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate the staging_DIGITALBANKING_ACCTBAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT *\nFROM DNACUSTOM.VW_DIGITALBANKING_ACCTBAL\nWHERE TO_TIMESTAMP(TO_CHAR(DATELASTMAINT, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS') BETWEEN\n\nTO_TIMESTAMP(TO_CHAR(SYSDATE - INTERVAL '1' HOUR, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS')\n\n   AND TO_TIMESTAMP(TO_CHAR(SYSDATE, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS')\n",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCTNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "ACCTNBR",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 20
										}
									},
									{
										"source": {
											"name": "BALAMT",
											"type": "Decimal"
										},
										"sink": {
											"name": "BALAMT",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 20
										}
									},
									{
										"source": {
											"name": "EFFDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "EFFDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CURRACCTSTATCD",
											"type": "String"
										},
										"sink": {
											"name": "CURRACCTSTATCD",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MAJORMINORCD",
											"type": "String"
										},
										"sink": {
											"name": "MAJORMINORCD",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SUBACCTNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "SUBACCTNBR",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 16
										}
									},
									{
										"source": {
											"name": "BALANCETYPE",
											"type": "String"
										},
										"sink": {
											"name": "BALANCETYPE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AVAILABLEBALANCE_ONLI",
											"type": "Double"
										},
										"sink": {
											"name": "AVAILABLEBALANCE_ONLI",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 20
										}
									},
									{
										"source": {
											"name": "DATELASTMAINT",
											"type": "DateTime"
										},
										"sink": {
											"name": "DateLastMaint",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_O_DIGITALBANKING_ACCTBAL_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_s_DIGITALBANKING_ACCTBAL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DIGITALBANKING_ACCTDETAILS",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Truncate the staging_DIGITALBANKING_ACCTDETAILS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCTNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "ACCTNBR",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 20
										}
									},
									{
										"source": {
											"name": "CURRACCTSTATCD",
											"type": "String"
										},
										"sink": {
											"name": "CURRACCTSTATCD",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MJACCTTYPCD",
											"type": "String"
										},
										"sink": {
											"name": "MJACCTTYPCD",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CURRMIACCTTYPCD",
											"type": "String"
										},
										"sink": {
											"name": "CURRMIACCTTYPCD",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MICUSTDESC",
											"type": "String"
										},
										"sink": {
											"name": "MICUSTDESC",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ACCTDESC",
											"type": "String"
										},
										"sink": {
											"name": "ACCTDESC",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DATEMAT",
											"type": "DateTime"
										},
										"sink": {
											"name": "DATEMAT",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "TAXRPTFORORGNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "TAXRPTFORORGNBR",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 20
										}
									},
									{
										"source": {
											"name": "TAXRPTFORPERSNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "TAXRPTFORPERSNBR",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 20
										}
									},
									{
										"source": {
											"name": "CONTRACTDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "CONTRACTDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CURRDUEDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "CURRDUEDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "PRIORYEARINTERESTPAID",
											"type": "Double"
										},
										"sink": {
											"name": "PRIORYEARINTERESTPAID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 20
										}
									},
									{
										"source": {
											"name": "CURRENTYEARINTERESTPAID",
											"type": "Double"
										},
										"sink": {
											"name": "CURRENTYEARINTERESTPAID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 20
										}
									},
									{
										"source": {
											"name": "REGULARPAYMENTAMOUNT",
											"type": "Decimal"
										},
										"sink": {
											"name": "REGULARPAYMENTAMOUNT",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 20
										}
									},
									{
										"source": {
											"name": "NOTEBALPERDIEM",
											"type": "Decimal"
										},
										"sink": {
											"name": "NOTEBALPERDIEM",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 20
										}
									},
									{
										"source": {
											"name": "NOTEINTRATE",
											"type": "Decimal"
										},
										"sink": {
											"name": "NOTEINTRATE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 20
										}
									},
									{
										"source": {
											"name": "DEFREMTERM",
											"type": "Decimal"
										},
										"sink": {
											"name": "DEFREMTERM",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 16
										}
									},
									{
										"source": {
											"name": "TOTALAMOUNTCURRENTLYDUE",
											"type": "Double"
										},
										"sink": {
											"name": "TOTALAMOUNTCURRENTLYDUE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 20
										}
									},
									{
										"source": {
											"name": "AMOUNTTOPAYCURRENT",
											"type": "Double"
										},
										"sink": {
											"name": "AMOUNTTOPAYCURRENT",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 20
										}
									},
									{
										"source": {
											"name": "ESTDATEMAT",
											"type": "DateTime"
										},
										"sink": {
											"name": "ESTDATEMAT",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CREDITLIMITAMT",
											"type": "Decimal"
										},
										"sink": {
											"name": "CREDITLIMITAMT",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 20
										}
									},
									{
										"source": {
											"name": "CURRTERM",
											"type": "Decimal"
										},
										"sink": {
											"name": "CURRTERM",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 20
										}
									},
									{
										"source": {
											"name": "PMTCALPERIODLIST",
											"type": "String"
										},
										"sink": {
											"name": "PMTCALPERIODLIST",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 20
										}
									},
									{
										"source": {
											"name": "DEFAULTTERMDAYS",
											"type": "Decimal"
										},
										"sink": {
											"name": "DEFAULTTERMDAYS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DATELASTCONTACT",
											"type": "DateTime"
										},
										"sink": {
											"name": "DATELASTCONTACT",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {},
										"sink": {
											"name": "DateLastMaint",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_O_DIGITALBANKING_ACCTDETAILS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_s_DIGITALBANKING_ACCTDETAILS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate the staging_DIGITALBANKING_ACCTBAL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE DIGITALBANKING_ACCTBAL_Staging;\nselect count(*) from DIGITALBANKING_ACCTBAL_Staging",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_s_DIGITALBANKING_ACCTBAL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Truncate the staging_DIGITALBANKING_ACCTDETAILS",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_s_DIGITALBANKING_ACCTDETAILS",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Sp_DIGITALBANKING_ACCTBAL",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DIGITALBANKING_ACCTBAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spi_inserttoACCTBAL]"
						},
						"linkedServiceName": {
							"referenceName": "ls_transactiondb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_DIGITALBANKING_ACCTDETAILS",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIGITALBANKING_ACCTDETAILS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spi_InserttoACCTDETAILS]"
						},
						"linkedServiceName": {
							"referenceName": "ls_transactiondb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-06T09:16:32Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_OfflineServices_Hourly')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DIGITALBANKING_ACCTLOCKOUT",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate the staging_DIGITALBANKING_ACCTLOCKOUT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "    SELECT *\n\nFROM DNACUSTOM.VW_DIGITALBANKING_ACCTLOCKOUT\n\nWHERE TO_TIMESTAMP(TO_CHAR(DATELASTMAINT, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS') BETWEEN\n\nTO_TIMESTAMP(TO_CHAR(SYSDATE - INTERVAL '1' HOUR, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS')\n\n   AND TO_TIMESTAMP(TO_CHAR(SYSDATE, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS')\n\n    AND (InActiveDate IS NULL OR InActiveDate >= SYSDATE);",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCTNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "ACCTNBR",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 16
										}
									},
									{
										"source": {
											"name": "EFFDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "EFFDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "LOCKOUTFLAGCD",
											"type": "String"
										},
										"sink": {
											"name": "LOCKOUTFLAGCD",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "INACTIVEDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "INACTIVEDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DATELASTMAINT",
											"type": "DateTime"
										},
										"sink": {
											"name": "DateLastMaint",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_O_DIGITALBANKING_ACCTLOCKOUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_s_DIGITALBANKING_ACCTLOCKOUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate the staging_DIGITALBANKING_ACCTLOCKOUT",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE DIGITALBANKING_ACCTLOCKOUT_Staging;\nselect count(*) from DIGITALBANKING_ACCTLOCKOUT_Staging",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_s_DIGITALBANKING_ACCTLOCKOUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Sp_DIGITALBANKING_ACCTLOCKOUT",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DIGITALBANKING_ACCTLOCKOUT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spi_InserttoACCTLOCKOUT]"
						},
						"linkedServiceName": {
							"referenceName": "ls_transactiondb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-06T09:16:32Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_OffllineServices_Daily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DIGITALBANKING_ORGPERSROLE",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Truncate the staging_DIGITALBANKING_ORGPERSROLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT *\nFROM DNACUSTOM.VW_DIGITALBANKING_ORGPERSROLE\n \nWHERE TO_TIMESTAMP(TO_CHAR(DATELASTMAINT, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS') BETWEEN\n\nTO_TIMESTAMP(TO_CHAR(SYSDATE - INTERVAL '1' HOUR, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS')\n\n   AND TO_TIMESTAMP(TO_CHAR(SYSDATE, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS')\n\n   \n",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ORGNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "ORGNBR",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "PERSROLECD",
											"type": "String"
										},
										"sink": {
											"name": "PERSROLECD",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EFFDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "EFFDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "PERSNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "PERSNBR",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "INACTIVEDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "INACTIVEDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DATELASTMAINT",
											"type": "DateTime"
										},
										"sink": {
											"name": "DateLastMaint",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_O_DIGITALBANKING_ORGPERSROLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_s_DIGITALBANKING_ORGPERSROLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DIGITALBANKING_PERSUSERFIELD",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate the staging_DIGITALBANKING_PERSUSERFIELD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT *\nFROM DNACUSTOM.VW_DIGITALBANKING_PERSUSERFIELD\nWHERE TO_TIMESTAMP(TO_CHAR(DATELASTMAINT, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS') BETWEEN\n\nTO_TIMESTAMP(TO_CHAR(SYSDATE - INTERVAL '1' HOUR, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS')\n\n   AND TO_TIMESTAMP(TO_CHAR(SYSDATE, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS')\n\n   ",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PERSNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "PERSNBR",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "USERFIELDCD",
											"type": "String"
										},
										"sink": {
											"name": "USERFIELDCD",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "VALUE",
											"type": "String"
										},
										"sink": {
											"name": "VALUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "VALUELASTUPDATEDDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "VALUELASTUPDATEDDA",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DATELASTMAINT",
											"type": "DateTime"
										},
										"sink": {
											"name": "DateLastMaint",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_O_Persuserfield",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_s_DigitalBanking_persuserfield",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DIGITALBANKING_ACCTACCTROLEPERS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate the staging_DIGITALBANKING_ACCTACCTROLEPERS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT *\nFROM DNACUSTOM.VW_DIGITALBANKING_ACCTACCTROLEPERS\nWHERE TO_TIMESTAMP(TO_CHAR(DATELASTMAINT, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS') BETWEEN\n\nTO_TIMESTAMP(TO_CHAR(SYSDATE - INTERVAL '1' HOUR, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS')\n\n   AND TO_TIMESTAMP(TO_CHAR(SYSDATE, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS')\n",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCTNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "ACCTNBR",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 20
										}
									},
									{
										"source": {
											"name": "EFFDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "EFFDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "PERSNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "PERSNBR",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 20
										}
									},
									{
										"source": {
											"name": "INACTIVEDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "INACTIVEDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ACCTROLECD",
											"type": "String"
										},
										"sink": {
											"name": "ACCTROLECD",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DATELASTMAINT",
											"type": "DateTime"
										},
										"sink": {
											"name": "DateLastMaint",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_O_DIGITALBANKING_ACCTACCTROLEPERS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_s_DIGITALBANKING_ACCTACCTROLEPERS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DIGITALBANKING_ACCTACCTROLEORG",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate the staging_DIGITALBANKING_ACCTACCTROLEORG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT *\nFROM DNACUSTOM.VW_DIGITALBANKING_ACCTACCTROLEORG\nWHERE TO_TIMESTAMP(TO_CHAR(DATELASTMAINT, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS') BETWEEN\n\nTO_TIMESTAMP(TO_CHAR(SYSDATE - INTERVAL '1' HOUR, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS')\n\n   AND TO_TIMESTAMP(TO_CHAR(SYSDATE, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS')\n\n",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCTNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "ACCTNBR",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 20
										}
									},
									{
										"source": {
											"name": "ACCTROLECD",
											"type": "String"
										},
										"sink": {
											"name": "ACCTROLECD",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EFFDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "EFFDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ORGNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "ORGNBR",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 20
										}
									},
									{
										"source": {
											"name": "INACTIVEDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "INACTIVEDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DATELASTMAINT",
											"type": "DateTime"
										},
										"sink": {
											"name": "DateLastMaint",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_o_DIGITALBANKING_ACCTACCTROLEORG",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_s_DIGITALBANKING_ACCTACCTROLEORG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DIGITALBANKING_EAGREEMENT",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate the staging_DIGITALBANKING_EAGREEMENT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT *\nFROM DNACUSTOM.VW_DIGITALBANKING_EAGREEMENT\nWHERE TO_TIMESTAMP(TO_CHAR(DATELASTMAINT, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS') BETWEEN\n\nTO_TIMESTAMP(TO_CHAR(SYSDATE - INTERVAL '1' HOUR, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS')\n\n   AND TO_TIMESTAMP(TO_CHAR(SYSDATE, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS')\n\n",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AGREENBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "AGREENBR",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 20
										}
									},
									{
										"source": {
											"name": "PERSNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "PERSNBR",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 20
										}
									},
									{
										"source": {
											"name": "BYORGNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "BYORGNBR",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 20
										}
									},
									{
										"source": {
											"name": "DATELASTMAINT",
											"type": "DateTime"
										},
										"sink": {
											"name": "DateLastMaint",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_O_DIGITALBANKING_EAGREEMENT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_s_DIGITALBANKING_EAGREEMENT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ORGSUSERFIELD",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate the staging_ORGSUSERFIELD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT *\r\nFROM DNACUSTOM.VW_DIGITALBANKING_ORGSUSERFIELD\r\nWHERE TO_TIMESTAMP(TO_CHAR(DATELASTMAINT, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS') BETWEEN\r\n\r\nTO_TIMESTAMP(TO_CHAR(SYSDATE - INTERVAL '1' HOUR, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS')\r\n\r\n   AND TO_TIMESTAMP(TO_CHAR(SYSDATE, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS')\r\n",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ORGNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "ORGNBR",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "USERFIELDCD",
											"type": "String"
										},
										"sink": {
											"name": "USERFIELDCD",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "VALUE",
											"type": "String"
										},
										"sink": {
											"name": "VALUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "VALUELASTUPDATEDDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "VALUELASTUPDATEDDA",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ORGNAME",
											"type": "String"
										},
										"sink": {
											"name": "ORGNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DATELASTMAINT",
											"type": "DateTime"
										},
										"sink": {
											"name": "DateLastMaint",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_O_DIGITALBANKING_ORGSUSERFIELD",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "db_s_DIGITALBANKING_ORGSUSERFIELD",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate the staging_DIGITALBANKING_ORGPERSROLE",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE DIGITALBANKING_ORGPERSROLE_Staging;\nselect count(*) from DIGITALBANKING_ORGPERSROLE_Staging",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_s_DIGITALBANKING_ORGPERSROLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Truncate the staging_DIGITALBANKING_PERSUSERFIELD",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE DIGITALBANKING_PERSUSERFIELD_Staging;\nselect count(*) from DIGITALBANKING_PERSUSERFIELD_Staging",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_s_DigitalBanking_persuserfield",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Truncate the staging_DIGITALBANKING_ACCTACCTROLEPERS",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE DIGITALBANKING_ACCTACCTROLEPERS_Staging;\nselect count(*) from DIGITALBANKING_ACCTACCTROLEPERS_Staging",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_s_DIGITALBANKING_ACCTACCTROLEPERS",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Truncate the staging_DIGITALBANKING_ACCTACCTROLEORG",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE DIGITALBANKING_ACCTACCTROLEORG_Staging;\nselect count(*) from DIGITALBANKING_ACCTACCTROLEORG_Staging",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_s_DIGITALBANKING_ACCTACCTROLEORG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Truncate the staging_DIGITALBANKING_EAGREEMENT",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE DIGITALBANKING_EAGREEMENT_Staging;\nselect count(*) from DIGITALBANKING_EAGREEMENT_Staging",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_s_DIGITALBANKING_EAGREEMENT",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Truncate the staging_ORGSUSERFIELD",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "\nTRUNCATE TABLE DIGITALBANKING_ORGSUSERFIELD_Staging;\nselect count(*) from DIGITALBANKING_ORGSUSERFIELD_Staging",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "db_s_DIGITALBANKING_ORGSUSERFIELD",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Sp_DIGITALBANKING_ORGPERSROLE",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIGITALBANKING_ORGPERSROLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spi_InserttoORGPERSROLE]"
						},
						"linkedServiceName": {
							"referenceName": "ls_transactiondb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_DIGITALBANKING_PERSUSERFIELD",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DIGITALBANKING_PERSUSERFIELD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spi_InserttoPERSUSERFIELD]"
						},
						"linkedServiceName": {
							"referenceName": "ls_transactiondb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_DIGITALBANKING_ACCTACCTROLEPERS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DIGITALBANKING_ACCTACCTROLEPERS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spi_InserttoACCTACCTROLEPERS]"
						},
						"linkedServiceName": {
							"referenceName": "ls_transactiondb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_DIGITALBANKING_ACCTACCTROLEORG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DIGITALBANKING_ACCTACCTROLEORG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spi_InsertToACCTACCTROLEORG]"
						},
						"linkedServiceName": {
							"referenceName": "ls_transactiondb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_DIGITALBANKING_EAGREEMENT",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DIGITALBANKING_EAGREEMENT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spi_InserttoEAGREEMENT]"
						},
						"linkedServiceName": {
							"referenceName": "ls_transactiondb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_ORGSUSERFIELD",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ORGSUSERFIELD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spi_InserttoORGSUSERFIELD]"
						},
						"linkedServiceName": {
							"referenceName": "ls_transactiondb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate the staging_ACCTUSERFIELD",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "db_s_DIGITALBANKING_ACCTUSERFIELD",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ACCTUSERFIELD",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate the staging_ACCTUSERFIELD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT *\nFROM DNACUSTOM.VW_DIGITALBANKING_ACCTUSERFIELD\nWHERE TO_TIMESTAMP(TO_CHAR(DATELASTMAINT, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS') BETWEEN\n\nTO_TIMESTAMP(TO_CHAR(SYSDATE - INTERVAL '1' HOUR, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS')\n\n   AND TO_TIMESTAMP(TO_CHAR(SYSDATE, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS')\n",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCTNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "ACCTNBR",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 16
										}
									},
									{
										"source": {
											"name": "USERFIELDCD",
											"type": "String"
										},
										"sink": {
											"name": "USERFIELDCD",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "VALUE",
											"type": "String"
										},
										"sink": {
											"name": "VALUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "VALUELASTUPDATEDDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "VALUELASTUPDATEDDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DATELASTMAINT",
											"type": "DateTime"
										},
										"sink": {
											"name": "DateLastMaint",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_O_DIGITALBANKING_ACCTUSERFIELD",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "db_s_DIGITALBANKING_ACCTUSERFIELD",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Sp_staging_ACCTUSERFIELD",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ACCTUSERFIELD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spi_InserttoACCTUSERFIELD]"
						},
						"linkedServiceName": {
							"referenceName": "ls_transactiondb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate the staging_EAGREEMENT_MAPPING",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "db_s_DIGITALBANKING_EAGREEMENT_MAPPING",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "EAGREEMENT_MAPPING",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate the staging_EAGREEMENT_MAPPING",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT *\nFROM DNACUSTOM.VW_DIGITALBANKING_EAGREEMENT_MAPPING\nWHERE TO_TIMESTAMP(TO_CHAR(DATELASTMAINT, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS') BETWEEN\n\nTO_TIMESTAMP(TO_CHAR(SYSDATE - INTERVAL '1' HOUR, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS')\n\n   AND TO_TIMESTAMP(TO_CHAR(SYSDATE, 'YYYY-MM-DD\"T\"HH24:MI:SS'), 'YYYY-MM-DD\"T\"HH24:MI:SS')\n",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AGREENBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "AGREENBR",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 16
										}
									},
									{
										"source": {
											"name": "PERSNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "PERSNBR",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 16
										}
									},
									{
										"source": {
											"name": "BYORGNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "BYORGNBR",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 16
										}
									},
									{
										"source": {
											"name": "ACCTNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "ACCTNBR",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 16
										}
									},
									{
										"source": {
											"name": "DATELASTMAINT",
											"type": "DateTime"
										},
										"sink": {
											"name": "DateLastMaint",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_O_DIGITALBANKING_EAGREEMENT_MAPPING",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "db_s_DIGITALBANKING_EAGREEMENT_MAPPING",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Sp_EAGREEMENT_MAPPING",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "EAGREEMENT_MAPPING",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spi_InserttoEAGREEMENT_MAPPING]"
						},
						"linkedServiceName": {
							"referenceName": "ls_transactiondb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-06T09:16:32Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PromocodeReordsTransfer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Source to Staging_Maintenance",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate MiniOAOPromocodeMaintenance_Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PromoCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PromoCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SavingsAccount",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "SavingsAccount",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CheckingAccounts",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "CheckingAccounts",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CertificateAccounts",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "CertificateAccounts",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "MoneyMarketAccounts",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "MoneyMarketAccounts",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PromoType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PromoType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Promotion",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Promotion",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Promo Start Date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Promo Start Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Administrator I",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Administrator I",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Administrator II",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Administrator II",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Approvers Name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Approvers Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Expiration Date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Expiration Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Platforms Impacted",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Platforms Impacted",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Age From",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Age From",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Age To",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Age To",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Existing Products",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Existing Products",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Existing Products Checking Types",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Existing Products Checking Types",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Zip Code",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Zip Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Open Office",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Open Office",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Balance History Amount",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Balance History Amount",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Balance History Period",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Balance History Period",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Opening Date From",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Opening Date From",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Opening Date To",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Opening Date To",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Transaction Type",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Transaction Type",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Transaction Details",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Transaction Details",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Transaction Details Period",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Transaction Details Period",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Completed Date From",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Completed Date From",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Completed Date To",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Completed Date To",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Criteria",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Criteria",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Can Qualify more than once",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Can Qualify more than once",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Reward Type",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Reward Type",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Disclosures",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Disclosures",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Transaction Details within",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Transaction Details within",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Rate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Rate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Promotion Type Youth",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Promotion Type Youth",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Balance History",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Balance History",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Checkings",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Checkings",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Savings",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Savings",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ActiveInactive",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ActiveInactive",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HubID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HubID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Promo Category",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Promo Category",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DetailsQualifications",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DetailsQualifications",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Marketing Materials",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Marketing Materials",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Market",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Market",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Reward Amount",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Reward Amount",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Minimum Balance",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Minimum Balance",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Aggregate Transaction Amount",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Aggregate Transaction Amount",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "New Account Deposit Amount",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "New Account Deposit Amount",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Aggregate Days",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Aggregate Days",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Aggregate No",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Aggregate No",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Member Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Member Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Applicable Region or Market",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Applicable Region or Market",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UId",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "UId",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Source",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Source",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_ss_PromoCodeMaintenance",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_S_MiniOAOPromocodeMaintenanceStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate MiniOAOPromocodeMaintenance_Staging",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE [dbo].[MiniOAOPromocodeMaintenance_Staging];\nselect count(*) from [dbo].[MiniOAOPromocodeMaintenance_Staging];",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_MiniOAOPromocodeMaintenanceStaging",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Truncate MiniOAOPromoStaticData_Staging",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE [dbo].[MiniOAOPromoStaticData_Staging];\r\nselect count(*) from [dbo].[MiniOAOPromoStaticData_Staging];",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_MiniOAOPromoStaticData_Staging",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Copy Source to Staging_Static",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate MiniOAOPromoStaticData_Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Display Value",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Display Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Group",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Group",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Is Active",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Is Active",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_ss_PromocodeStatic",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_S_MiniOAOPromoStaticData_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sp_Maintenance",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Truncate MiniOAOPromocodeMaintenance",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_MiniOAOPromoMaintenanceStagingInserttoMiniOAOPromoMaintenance]"
						},
						"linkedServiceName": {
							"referenceName": "BusinessData",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_StaticData",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Truncate MiniOAOPromoStaticData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_MiniOAOPromoStaticDataStagingInserttoMiniOAOPromoStaticData]"
						},
						"linkedServiceName": {
							"referenceName": "BusinessData",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate MiniOAOPromocodeMaintenance",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy Source to Staging_Maintenance",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE [dbo].[MiniOAOPromocodeMaintenance];\r\nselect count(*) from [dbo].[MiniOAOPromocodeMaintenance];",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_MiniOAOPromocodeMaintenance",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Truncate MiniOAOPromoStaticData",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy Source to Staging_Static",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE [dbo].[MiniOAOPromoStaticData];\r\nselect count(*) from [dbo].[MiniOAOPromoStaticData];",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_MiniOAOPromoStaticData",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-02T13:33:24Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PromocodeReordsTransferDev')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Source to Staging_Maintenance",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate MiniOAOPromocodeMaintenance_Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PromoCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PromoCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SavingsAccount",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "SavingsAccount",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CheckingAccounts",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "CheckingAccounts",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CertificateAccounts",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "CertificateAccounts",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "MoneyMarketAccounts",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "MoneyMarketAccounts",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PromoType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PromoType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Promotion",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Promotion",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Promo Start Date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Promo Start Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Administrator I",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Administrator I",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Administrator II",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Administrator II",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Approvers Name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Approvers Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Expiration Date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Expiration Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Platforms Impacted",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Platforms Impacted",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Age From",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Age From",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Age To",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Age To",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Existing Products",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Existing Products",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Existing Products Checking Types",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Existing Products Checking Types",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Zip Code",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Zip Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Open Office",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Open Office",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Balance History Amount",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Balance History Amount",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Balance History Period",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Balance History Period",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Opening Date From",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Opening Date From",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Opening Date To",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Opening Date To",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Transaction Type",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Transaction Type",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Transaction Details",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Transaction Details",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Transaction Details Period",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Transaction Details Period",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Completed Date From",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Completed Date From",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Completed Date To",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Completed Date To",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Criteria",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Criteria",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Can Qualify more than once",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Can Qualify more than once",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Reward Type",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Reward Type",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Disclosures",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Disclosures",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Transaction Details within",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Transaction Details within",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Rate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Rate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Promotion Type Youth",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Promotion Type Youth",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Balance History",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Balance History",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Checkings",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Checkings",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Savings",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Savings",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ActiveInactive",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ActiveInactive",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HubID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HubID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Promo Category",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Promo Category",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DetailsQualifications",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DetailsQualifications",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Marketing Materials",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Marketing Materials",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Market",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Market",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Reward Amount",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Reward Amount",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Minimum Balance",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Minimum Balance",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Aggregate Transaction Amount",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Aggregate Transaction Amount",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "New Account Deposit Amount",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "New Account Deposit Amount",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Aggregate Days",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Aggregate Days",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Aggregate No",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Aggregate No",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Member Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Member Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Applicable Region or Market",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Applicable Region or Market",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UId",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "UId",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Source",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Source",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_ss_PromoCodeMaintenance",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_S_MiniOAOPromocodeMaintenanceStaging_DEV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate MiniOAOPromocodeMaintenance_Staging",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE [dbo].[MiniOAOPromocodeMaintenance_Staging];\nselect count(*) from [dbo].[MiniOAOPromocodeMaintenance_Staging];",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_MiniOAOPromocodeMaintenanceStaging_DEV",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Truncate MiniOAOPromoStaticData_Staging",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE [dbo].[MiniOAOPromoStaticData_Staging];\r\nselect count(*) from [dbo].[MiniOAOPromoStaticData_Staging];",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_MiniOAOPromoStaticData_Staging_DEV",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Copy Source to Staging_Static",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate MiniOAOPromoStaticData_Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Display Value",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Display Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Group",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Group",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Is Active",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Is Active",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_ss_PromocodeStatic",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_S_MiniOAOPromoStaticData_Staging_DEV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sp_Maintenance",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Truncate MiniOAOPromocodeMaintenance",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_MiniOAOPromoMaintenanceStagingInserttoMiniOAOPromoMaintenance]"
						},
						"linkedServiceName": {
							"referenceName": "BusinessDataDev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_StaticData",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Truncate MiniOAOPromoStaticData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_MiniOAOPromoStaticDataStagingInserttoMiniOAOPromoStaticData]"
						},
						"linkedServiceName": {
							"referenceName": "BusinessDataDev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate MiniOAOPromocodeMaintenance",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy Source to Staging_Maintenance",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE [dbo].[MiniOAOPromocodeMaintenance];\r\nselect count(*) from [dbo].[MiniOAOPromocodeMaintenance];",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_MiniOAOPromocodeMaintenance_DEV",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Truncate MiniOAOPromoStaticData",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy Source to Staging_Static",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE [dbo].[MiniOAOPromoStaticData];\r\nselect count(*) from [dbo].[MiniOAOPromoStaticData];",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_MiniOAOPromoStaticData_DEV",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-02T13:33:24Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TransactionTransfer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cd_AltratoDigitalBankingTransfers",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate the staging table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT * FROM DNACUSTOM.VW_DIGITALBANKINGTRANSACTIONS WHERE TRANSACTIONID > @{variables('transid')} ",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCOUNTNUMBER",
											"type": "Decimal"
										},
										"sink": {
											"name": "AccountNumber",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										}
									},
									{
										"source": {
											"name": "ACCOUNTTRANSACTIONNUMBER",
											"type": "Decimal"
										},
										"sink": {
											"name": "AccountTransactionNumber",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										}
									},
									{
										"source": {
											"name": "TRANSACTIONID",
											"type": "Decimal"
										},
										"sink": {
											"name": "TransactionID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										}
									},
									{
										"source": {
											"name": "TRANSACTIONFISCALDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "TransactionFiscalDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONDATETIME",
											"type": "DateTime"
										},
										"sink": {
											"name": "TransactionDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONEFFECTIVEDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "TransactionEffectiveDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONTYPECODE",
											"type": "String"
										},
										"sink": {
											"name": "TransactionTypeCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONTYPE",
											"type": "String"
										},
										"sink": {
											"name": "TransactionType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONSTATUSCODE",
											"type": "String"
										},
										"sink": {
											"name": "TransactionStatusCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONSTATUS",
											"type": "String"
										},
										"sink": {
											"name": "TransactionStatus",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONDESCRIPTION",
											"type": "String"
										},
										"sink": {
											"name": "TransactionDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SUBACCTNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "SubAcctNbr",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										}
									},
									{
										"source": {
											"name": "BALCATCD",
											"type": "String"
										},
										"sink": {
											"name": "BalCatCd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BALTYPCD",
											"type": "String"
										},
										"sink": {
											"name": "BalTypCd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BALANCEDESCRIPTION",
											"type": "String"
										},
										"sink": {
											"name": "BalanceDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AMOUNT",
											"type": "Double"
										},
										"sink": {
											"name": "Amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "TRANAMT",
											"type": "Double"
										},
										"sink": {
											"name": "TranAmt",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "BALANCE",
											"type": "String"
										},
										"sink": {
											"name": "Balance",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "CHECKNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "CheckNbr",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										}
									},
									{
										"source": {
											"name": "TRACENBR",
											"type": "String"
										},
										"sink": {
											"name": "TraceNbr",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_O_AltraServerConnectivity",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_S_DigitalBankingConectivity",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Fetch the last TransId",
						"description": "Fetch last transaction Id from transaction table of transactions",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT MAX(TRANSACTIONID) AS MAXTRANSID FROM TRANSACTIONS",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_DigitalBankingTransactionRecord",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Fetch the last TransId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "transid",
							"value": {
								"value": "@string(activity('Fetch the last TransId').output.firstRow.MAXTRANSID)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "sp_InsertTransaction",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd_AltratoDigitalBankingTransfers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_TransactionData]"
						},
						"linkedServiceName": {
							"referenceName": "ls_transactiondb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate the staging table",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE Transactions_Staging;\nselect count(*) from Transactions_Staging",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_DigitalBankingConectivity",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Transfer_StagingData_Alerts",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TruncateAlertStaging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AccountNumber",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										},
										"sink": {
											"name": "AccountNumber",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										}
									},
									{
										"source": {
											"name": "AccountTransactionNumber",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										},
										"sink": {
											"name": "AccountTransactionNumber",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										}
									},
									{
										"source": {
											"name": "TransactionID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										},
										"sink": {
											"name": "TransactionID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										}
									},
									{
										"source": {
											"name": "TransactionFiscalDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "TransactionFiscalDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "TransactionDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "TransactionDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "TransactionEffectiveDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "TransactionEffectiveDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "TransactionTypeCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TransactionTypeCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TransactionType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TransactionType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TransactionStatusCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TransactionStatusCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TransactionStatus",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TransactionStatus",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TransactionDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TransactionDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SubAcctNbr",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										},
										"sink": {
											"name": "SubAcctNbr",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										}
									},
									{
										"source": {
											"name": "BalCatCd",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BalCatCd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BalTypCd",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BalTypCd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BalanceDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BalanceDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 38
										},
										"sink": {
											"name": "Amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "TranAmt",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 38
										},
										"sink": {
											"name": "TranAmt",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "Balance",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 38
										},
										"sink": {
											"name": "Balance",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "CheckNbr",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										},
										"sink": {
											"name": "CheckNbr",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										}
									},
									{
										"source": {
											"name": "TraceNbr",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TraceNbr",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_S_DigitalBankingConectivity",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_S_InsertDataToAlerts",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TruncateAlertStaging",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "cd_AltratoDigitalBankingTransfers",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE Transaction_AlertStaging;\nselect count(*) from Transaction_AlertStaging",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_InsertDataToAlerts",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Insert to AlertTransaction",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Transfer_StagingData_Alerts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertTransactionAlertFromStaging]"
						},
						"linkedServiceName": {
							"referenceName": "BusinessDataDev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "TruncateAlertStagingQA",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "cd_AltratoDigitalBankingTransfers",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE Transaction_AlertStaging;\nselect count(*) from Transaction_AlertStaging",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_InsertDataToAlertsQA",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Transfer_StagingData_AlertsQA",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TruncateAlertStagingQA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AccountNumber",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										},
										"sink": {
											"name": "AccountNumber",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										}
									},
									{
										"source": {
											"name": "AccountTransactionNumber",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										},
										"sink": {
											"name": "AccountTransactionNumber",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										}
									},
									{
										"source": {
											"name": "TransactionID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										},
										"sink": {
											"name": "TransactionID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										}
									},
									{
										"source": {
											"name": "TransactionFiscalDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "TransactionFiscalDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "TransactionDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "TransactionDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "TransactionEffectiveDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "TransactionEffectiveDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "TransactionTypeCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TransactionTypeCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TransactionType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TransactionType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TransactionStatusCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TransactionStatusCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TransactionStatus",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TransactionStatus",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TransactionDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TransactionDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SubAcctNbr",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										},
										"sink": {
											"name": "SubAcctNbr",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										}
									},
									{
										"source": {
											"name": "BalCatCd",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BalCatCd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BalTypCd",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BalTypCd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BalanceDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BalanceDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 38
										},
										"sink": {
											"name": "Amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "TranAmt",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 38
										},
										"sink": {
											"name": "TranAmt",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "Balance",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 38
										},
										"sink": {
											"name": "Balance",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "CheckNbr",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										},
										"sink": {
											"name": "CheckNbr",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										}
									},
									{
										"source": {
											"name": "TraceNbr",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TraceNbr",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_S_DigitalBankingConectivity",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_S_InsertDataToAlertsQA",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Insert to AlertTransactionQA",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Transfer_StagingData_AlertsQA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertTransactionAlertFromStaging]"
						},
						"linkedServiceName": {
							"referenceName": "BusinessDataQA",
							"type": "LinkedServiceReference"
						}
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"transid": {
						"type": "String",
						"defaultValue": "0"
					},
					"subacctnbr": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-09-15T10:38:28Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TransactionTransferQA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cd_AltratoDigitalBankingTransfers",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate the staging table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT * FROM DNACUSTOM.VW_DIGITALBANKINGTRANSACTIONS WHERE TRANSACTIONID > @{variables('transid')} ",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCOUNTNUMBER",
											"type": "Decimal"
										},
										"sink": {
											"name": "AccountNumber",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										}
									},
									{
										"source": {
											"name": "ACCOUNTTRANSACTIONNUMBER",
											"type": "Decimal"
										},
										"sink": {
											"name": "AccountTransactionNumber",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										}
									},
									{
										"source": {
											"name": "TRANSACTIONID",
											"type": "Decimal"
										},
										"sink": {
											"name": "TransactionID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										}
									},
									{
										"source": {
											"name": "TRANSACTIONFISCALDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "TransactionFiscalDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONDATETIME",
											"type": "DateTime"
										},
										"sink": {
											"name": "TransactionDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONEFFECTIVEDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "TransactionEffectiveDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONTYPECODE",
											"type": "String"
										},
										"sink": {
											"name": "TransactionTypeCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONTYPE",
											"type": "String"
										},
										"sink": {
											"name": "TransactionType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONSTATUSCODE",
											"type": "String"
										},
										"sink": {
											"name": "TransactionStatusCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONSTATUS",
											"type": "String"
										},
										"sink": {
											"name": "TransactionStatus",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONDESCRIPTION",
											"type": "String"
										},
										"sink": {
											"name": "TransactionDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SUBACCTNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "SubAcctNbr",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										}
									},
									{
										"source": {
											"name": "BALCATCD",
											"type": "String"
										},
										"sink": {
											"name": "BalCatCd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BALTYPCD",
											"type": "String"
										},
										"sink": {
											"name": "BalTypCd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BALANCEDESCRIPTION",
											"type": "String"
										},
										"sink": {
											"name": "BalanceDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AMOUNT",
											"type": "Double"
										},
										"sink": {
											"name": "Amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "TRANAMT",
											"type": "Double"
										},
										"sink": {
											"name": "TranAmt",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "BALANCE",
											"type": "String"
										},
										"sink": {
											"name": "Balance",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "CHECKNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "CheckNbr",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										}
									},
									{
										"source": {
											"name": "TRACENBR",
											"type": "String"
										},
										"sink": {
											"name": "TraceNbr",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_O_AltraServerConnectivity",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_S_DigitalBankingConectivity",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Fetch the last TransId",
						"description": "Fetch the last TransId",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT MAX(TRANSACTIONID) AS MAXTRANSID FROM TRANSACTIONS",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_DigitalBankingTransactionRecord",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Fetch the last TransId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "transid",
							"value": {
								"value": "@string(activity('Fetch the last TransId').output.firstRow.MAXTRANSID)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "sp_InsertTransaction",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd_AltratoDigitalBankingTransfers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_TransactionData]"
						},
						"linkedServiceName": {
							"referenceName": "ls_transactiondb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate the staging table",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE Transactions_Staging;\nselect count(*) from Transactions_Staging",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_DigitalBankingConectivity",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Upperlimit trans id",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "fetch the transactionId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "transidlimit",
							"value": {
								"value": "@string(activity('fetch the transactionId').output.firstRow.MAXTRANSID)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "fetch the transactionId",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "sp_InsertTransaction",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT MAX(TRANSACTIONID) AS MAXTRANSID FROM TRANSACTIONS",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_DigitalBankingTransactionRecord",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If there is records",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Upperlimit trans id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('transid'), variables('transidlimit'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "TruncateAlertStaging",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": "TRUNCATE TABLE Transaction_AlertStaging;\nselect count(*) from Transaction_AlertStaging",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_S_InsertDataToAlertsQA",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Transfer_StagingData_Alerts_copy1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "TruncateAlertStaging",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "SELECT * FROM DNACUSTOM.VW_DIGITALBANKINGTRANSACTIONS WHERE TRANSACTIONID > @{variables('transid')} and transactionId <= @{variables('transidlimit')}",
												"type": "Expression"
											},
											"partitionOption": "None",
											"convertDecimalToInteger": false,
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "ACCOUNTNUMBER",
														"type": "Decimal"
													},
													"sink": {
														"name": "AccountNumber",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 22
													}
												},
												{
													"source": {
														"name": "ACCOUNTTRANSACTIONNUMBER",
														"type": "Decimal"
													},
													"sink": {
														"name": "AccountTransactionNumber",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 22
													}
												},
												{
													"source": {
														"name": "TRANSACTIONID",
														"type": "Decimal"
													},
													"sink": {
														"name": "TransactionID",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 22
													}
												},
												{
													"source": {
														"name": "TRANSACTIONFISCALDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "TransactionFiscalDate",
														"type": "DateTime",
														"physicalType": "date"
													}
												},
												{
													"source": {
														"name": "TRANSACTIONDATETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "TransactionDateTime",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "TRANSACTIONEFFECTIVEDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "TransactionEffectiveDate",
														"type": "DateTime",
														"physicalType": "date"
													}
												},
												{
													"source": {
														"name": "TRANSACTIONTYPECODE",
														"type": "String"
													},
													"sink": {
														"name": "TransactionTypeCode",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "TRANSACTIONTYPE",
														"type": "String"
													},
													"sink": {
														"name": "TransactionType",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "TRANSACTIONSTATUSCODE",
														"type": "String"
													},
													"sink": {
														"name": "TransactionStatusCode",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "TRANSACTIONSTATUS",
														"type": "String"
													},
													"sink": {
														"name": "TransactionStatus",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "TRANSACTIONDESCRIPTION",
														"type": "String"
													},
													"sink": {
														"name": "TransactionDescription",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "SUBACCTNBR",
														"type": "Decimal"
													},
													"sink": {
														"name": "SubAcctNbr",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 22
													}
												},
												{
													"source": {
														"name": "BALCATCD",
														"type": "String"
													},
													"sink": {
														"name": "BalCatCd",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "BALTYPCD",
														"type": "String"
													},
													"sink": {
														"name": "BalTypCd",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "BALANCEDESCRIPTION",
														"type": "String"
													},
													"sink": {
														"name": "BalanceDescription",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "AMOUNT",
														"type": "Double"
													},
													"sink": {
														"name": "Amount",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 3,
														"precision": 38
													}
												},
												{
													"source": {
														"name": "TRANAMT",
														"type": "Double"
													},
													"sink": {
														"name": "TranAmt",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 3,
														"precision": 38
													}
												},
												{
													"source": {
														"name": "BALANCE",
														"type": "String"
													},
													"sink": {
														"name": "Balance",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 3,
														"precision": 38
													}
												},
												{
													"source": {
														"name": "CHECKNBR",
														"type": "Decimal"
													},
													"sink": {
														"name": "CheckNbr",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 22
													}
												},
												{
													"source": {
														"name": "TRACENBR",
														"type": "String"
													},
													"sink": {
														"name": "TraceNbr",
														"type": "String",
														"physicalType": "nvarchar"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_O_AltraServerConnectivity",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_S_InsertDataToAlertsQA",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Insert to AlertTransaction_copy1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Transfer_StagingData_Alerts_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[InsertTransactionAlertFromStaging]"
									},
									"linkedServiceName": {
										"referenceName": "BusinessDataQA",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"transid": {
						"type": "String",
						"defaultValue": "0"
					},
					"subacctnbr": {
						"type": "String",
						"defaultValue": "0"
					},
					"transidlimit": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-09-25T08:06:37Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TransactionsAfter_DNARefresh_QA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy from the source",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate the Transactions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\nFROM DNACUSTOM.VW_DIGITALBANKINGTRANSACTIONS\nWHERE TransactionFiscalDate >= TO_TIMESTAMP('@{variables('StartDate')}', 'YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')\nAND TransactionFiscalDate <= TO_TIMESTAMP('@{variables('EndDate')}', 'YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')\nORDER BY TRANSACTIONID, SUBACCTNBR;\n\n \n",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCOUNTNUMBER",
											"type": "Decimal"
										},
										"sink": {
											"name": "AccountNumber",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ACCOUNTTRANSACTIONNUMBER",
											"type": "Decimal"
										},
										"sink": {
											"name": "AccountTransactionNumber",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONID",
											"type": "Decimal"
										},
										"sink": {
											"name": "TransactionID",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONFISCALDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "TransactionFiscalDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONDATETIME",
											"type": "DateTime"
										},
										"sink": {
											"name": "TransactionDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONEFFECTIVEDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "TransactionEffectiveDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONTYPECODE",
											"type": "String"
										},
										"sink": {
											"name": "TransactionTypeCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONTYPE",
											"type": "String"
										},
										"sink": {
											"name": "TransactionType",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONSTATUSCODE",
											"type": "String"
										},
										"sink": {
											"name": "TransactionStatusCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONSTATUS",
											"type": "String"
										},
										"sink": {
											"name": "TransactionStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONDESCRIPTION",
											"type": "String"
										},
										"sink": {
											"name": "TransactionDescription",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SUBACCTNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "SubAcctNbr",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "BALCATCD",
											"type": "String"
										},
										"sink": {
											"name": "BalCatCd",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BALTYPCD",
											"type": "String"
										},
										"sink": {
											"name": "BalTypCd",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BALANCEDESCRIPTION",
											"type": "String"
										},
										"sink": {
											"name": "BalanceDescription",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AMOUNT",
											"type": "Double"
										},
										"sink": {
											"name": "Amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "TRANAMT",
											"type": "Double"
										},
										"sink": {
											"name": "TranAmt",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "BALANCE",
											"type": "String"
										},
										"sink": {
											"name": "Balance",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "CHECKNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "CheckNbr",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "TRACENBR",
											"type": "String"
										},
										"sink": {
											"name": "TraceNbr",
											"type": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_O_AltraServerConnectivity",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_S_DigitalBankingTransactionRecord",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Fetch the date",
						"description": "Fetch the date before 18 months ago",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select  TRUNC(SYSDATE - 2) - INTERVAL '18' MONTH AS FIRSTTRANSDATE FROM DUAL",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "ds_O_AltraServerConnectivity",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "MinTransDate",
						"description": "First Transaction Date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Fetch the date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "StartDate",
							"value": {
								"value": "@string(activity('Fetch the date').output.firstRow.FIRSTTRANSDATE)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Truncate the Transactions",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "MaxTransDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE dbo.Transactions;\nselect count(*) from dbo.Transactions",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_DigitalBankingTransactionRecord",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Fetch the End Date",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "MinTransDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT (SYSDATE - 1) AS LASTTRANSDATE FROM DUAL;",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "ds_O_AltraServerConnectivity",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "MaxTransDate",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Fetch the End Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "EndDate",
							"value": {
								"value": "@string(activity('Fetch the End Date').output.firstRow.LASTTRANSDATE)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"TransactionID": {
						"type": "String"
					},
					"transid": {
						"type": "String"
					},
					"datebefore": {
						"type": "String"
					},
					"StartDate": {
						"type": "String"
					},
					"EndDate": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TransactionsTransfersDEV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Fetch the last TransId",
						"description": "Fetch the last TransId",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT MAX(TRANSACTIONID) AS MAXTRANSID FROM TRANSACTIONS",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_DigitalBankingTransactionRecord",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Fetch the last TransId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "transid",
							"value": {
								"value": "@string(activity('Fetch the last TransId').output.firstRow.MAXTRANSID)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Transfer_StagingData_Alerts",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TruncateAlertStaging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT * FROM DNACUSTOM.VW_DIGITALBANKINGTRANSACTIONS WHERE TRANSACTIONID > @{variables('transid')} ",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCOUNTNUMBER",
											"type": "Decimal"
										},
										"sink": {
											"name": "AccountNumber",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										}
									},
									{
										"source": {
											"name": "ACCOUNTTRANSACTIONNUMBER",
											"type": "Decimal"
										},
										"sink": {
											"name": "AccountTransactionNumber",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										}
									},
									{
										"source": {
											"name": "TRANSACTIONID",
											"type": "Decimal"
										},
										"sink": {
											"name": "TransactionID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										}
									},
									{
										"source": {
											"name": "TRANSACTIONFISCALDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "TransactionFiscalDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONDATETIME",
											"type": "DateTime"
										},
										"sink": {
											"name": "TransactionDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONEFFECTIVEDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "TransactionEffectiveDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONTYPECODE",
											"type": "String"
										},
										"sink": {
											"name": "TransactionTypeCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONTYPE",
											"type": "String"
										},
										"sink": {
											"name": "TransactionType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONSTATUSCODE",
											"type": "String"
										},
										"sink": {
											"name": "TransactionStatusCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONSTATUS",
											"type": "String"
										},
										"sink": {
											"name": "TransactionStatus",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TRANSACTIONDESCRIPTION",
											"type": "String"
										},
										"sink": {
											"name": "TransactionDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SUBACCTNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "SubAcctNbr",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										}
									},
									{
										"source": {
											"name": "BALCATCD",
											"type": "String"
										},
										"sink": {
											"name": "BalCatCd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BALTYPCD",
											"type": "String"
										},
										"sink": {
											"name": "BalTypCd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BALANCEDESCRIPTION",
											"type": "String"
										},
										"sink": {
											"name": "BalanceDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AMOUNT",
											"type": "Double"
										},
										"sink": {
											"name": "Amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "TRANAMT",
											"type": "Double"
										},
										"sink": {
											"name": "TranAmt",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "BALANCE",
											"type": "String"
										},
										"sink": {
											"name": "Balance",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "CHECKNBR",
											"type": "Decimal"
										},
										"sink": {
											"name": "CheckNbr",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 22
										}
									},
									{
										"source": {
											"name": "TRACENBR",
											"type": "String"
										},
										"sink": {
											"name": "TraceNbr",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_O_AltraServerConnectivity",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_S_InsertDataToAlerts",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TruncateAlertStaging",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set variable",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE Transaction_AlertStaging;\nselect count(*) from Transaction_AlertStaging",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_S_InsertDataToAlerts",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Insert to AlertTransaction",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Transfer_StagingData_Alerts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertTransactionAlertFromStaging]"
						},
						"linkedServiceName": {
							"referenceName": "BusinessDataDev",
							"type": "LinkedServiceReference"
						}
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"transid": {
						"type": "String",
						"defaultValue": "0"
					},
					"subacctnbr": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-09-21T07:45:23Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlMITable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BusinessDATAUAT_UATPRODSQL_Server_Connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlMITable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Transaction_Alerts"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BusinessDATAUAT_UATPRODSQL_Server_Connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_S_DynamicCampaign_LoanServices_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BusinessDATAUAT_UATPRODSQL_Server_Connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlMITable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AsOfDate",
						"type": "date"
					},
					{
						"name": "LoanFamilyCode",
						"type": "varchar"
					},
					{
						"name": "LoanTypeCode",
						"type": "varchar"
					},
					{
						"name": "LoanTypeDescription",
						"type": "varchar"
					},
					{
						"name": "BusinessLoanFlag",
						"type": "bit"
					},
					{
						"name": "LoanGroup1",
						"type": "varchar"
					},
					{
						"name": "LoanGroup2",
						"type": "varchar"
					},
					{
						"name": "LoanGroup3",
						"type": "varchar"
					},
					{
						"name": "LoanGroup4",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CampaignLoanServices"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BusinessDATAUAT_UATPRODSQL_Server_Connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_S_DynamicCampaign_Loan_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BusinessDATAUAT_UATPRODSQL_Server_Connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlMITable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LoanID",
						"type": "varchar"
					},
					{
						"name": "AsOfDate",
						"type": "date"
					},
					{
						"name": "PartyCode",
						"type": "varchar"
					},
					{
						"name": "LoanStatusGroup",
						"type": "varchar"
					},
					{
						"name": "LoanFamilyCode",
						"type": "varchar"
					},
					{
						"name": "LoanTypeCode",
						"type": "varchar"
					},
					{
						"name": "LoanOpenDate",
						"type": "date"
					},
					{
						"name": "LoanCloseDate",
						"type": "date"
					},
					{
						"name": "CurrentBalance",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "CreditLimit",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "LoanMaturityDate",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CampaignLoan"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BusinessDATAUAT_UATPRODSQL_Server_Connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_S_DynamicCampaign_Members_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BusinessDATAUAT_UATPRODSQL_Server_Connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlMITable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PartyCode",
						"type": "varchar"
					},
					{
						"name": "AsOfDate",
						"type": "date"
					},
					{
						"name": "MemberStatusGroup",
						"type": "varchar"
					},
					{
						"name": "MembershipOpenDate",
						"type": "date"
					},
					{
						"name": "MembershipType",
						"type": "varchar"
					},
					{
						"name": "ZIPCode",
						"type": "varchar"
					},
					{
						"name": "City",
						"type": "varchar"
					},
					{
						"name": "State",
						"type": "varchar"
					},
					{
						"name": "BirthDate",
						"type": "date"
					},
					{
						"name": "MarketingOptOut",
						"type": "bit"
					},
					{
						"name": "NewMemberFlag",
						"type": "bit"
					},
					{
						"name": "OnlineBankingUserFlag",
						"type": "bit"
					},
					{
						"name": "MobileAppUserFlag",
						"type": "bit"
					},
					{
						"name": "QuickAccessUserFlag",
						"type": "bit"
					},
					{
						"name": "EStatementsUserFlag",
						"type": "bit"
					},
					{
						"name": "BillPayUserFlag",
						"type": "bit"
					},
					{
						"name": "ScheduledTransferUserFlag",
						"type": "bit"
					},
					{
						"name": "RemoteDepositUserFlag",
						"type": "bit"
					},
					{
						"name": "SendMoneyUserFlag",
						"type": "bit"
					},
					{
						"name": "MobileWalletUserFlag",
						"type": "bit"
					},
					{
						"name": "Region",
						"type": "varchar"
					},
					{
						"name": "BranchNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BranchName",
						"type": "varchar"
					},
					{
						"name": "CountryCode",
						"type": "varchar"
					},
					{
						"name": "AFAMemberFlag",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CampaignMember"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BusinessDATAUAT_UATPRODSQL_Server_Connection')]"
			]
		}
	]
}